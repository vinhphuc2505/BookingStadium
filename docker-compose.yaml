name: bookingstadium

services:
  kafka:
    image: 'apache/kafka:3.8.0'
    container_name: kafka
    hostname: kafka
    user: root
    ports:
      - "9094:9094"
    volumes:
      - kafka_data:/var/lib/kafka/data
    environment:
      # === KRaft Settings ===
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_NODE_ID=1
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka:9093

      # === Listeners ===
      - KAFKA_LISTENERS=BROKER://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_ADVERTISED_LISTENERS=BROKER://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_INTER_BROKER_LISTENER_NAME=BROKER
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,BROKER:PLAINTEXT,EXTERNAL:PLAINTEXT

      # === Cluster ID ===
      - CLUSTER_ID=nN7TCQkHS266JwTLLvtavw

      # === Topic Settings ===
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1

  # 2. MYSQL SERVICE
  mysql:
    image: mysql:8.0.43-debian
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=123456
    volumes:
      - mysql_data:/var/lib/mysql

  # 3. MONGODB SERVICE
  mongodb:
    image: mongodb/mongodb-community-server:7.0-ubi8
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=123456
    volumes:
      - mongo_data:/data/db

  # 4. POSTGRESQL SERVICE
  postgres:
    image: postgres:12.22
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=123456
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # 5. REDIS SERVICE
  redis:
    image: redis/redis-stack:7.4.0-v6
    container_name: redis
    ports:
      # Server
      - "6379:6379"
      # Web UI
      - "8001:8001"
    environment:
      - REDIS_ARGS="--requirepass 123456"
    volumes:
      - redis_data:/data

volumes:
  kafka_data:
  mysql_data:
  mongo_data:
  postgres_data:
  redis_data: