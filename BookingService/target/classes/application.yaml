server:
  port: 8086
  servlet:
    context-path: /booking


spring:
  application:
    name: booking-service

  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_POST:5432}/${BOOKING_DB_NAME:booking_db}
    username: ${POSTGRES_USERNAME:postgres}
    password: ${POSTGRES_PASSWORD:123456}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  kafka:
    bootstrap-servers: ${KAFKA_HOST:localhost}:${KAFKA_POST:9094}
    producer:
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      properties:
#        spring.json.add.type.headers: false
    consumer:
      group-id: booking-service-group
#      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer

      properties:
        spring.json.trusted.packages: "*"
      auto-offset-reset: earliest

  logging:
    level:
      org.springframework.kafka: DEBUG

jwt:
  signerKey: ${SIGNER_KEY:t3/lBrCm1lZ4HeOZtzdcgR678t3aEeFB5NVrsPSRzq4DPCRpS/D3NvbQcpMwXgKb}